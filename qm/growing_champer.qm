<?xml version="1.0" encoding="UTF-8"?>
<model version="5.1.3" links="0">
 <documentation>About this example:
-------------------
Simple &quot;Blinky&quot; console application for workstations (Windows, Linux, MacOS)
(see &quot;QM Tutorial&quot; at: https://www.state-machine.com/qm/gs_tut.html)

This example demonstrates:
- Active object (Blinky) with state machine
- Board Support Package abstraction for portability
- BSP implementation for desktop OS (Windows, Linux, MacOS)
- Platform-independent main() function
- Makefile to build the generated code on desktop OS (Windows, Linux, MacOS)
- Customized tools for building the generated code directly from QM

Building the example:
---------------------
To build this example, you will need the QP-nano framework installed on your computer and the GNU-GCC compiler, which you can get by installing the QP-bundle from:

https://www.state-machine.com/#Downloads

NOTE: QP-nano has been discontinued and is NOT present in the newer releases of QP-bundle.


Running the example:
--------------------
This example is a simple console application, which you can run from a terminal.

For more QM examples for QP-nano see:
https://www.state-machine.com/qpn/exa.html</documentation>
 <framework name="qpn"/>
 <package name="Hsm" stereotype="0x00">
  <class name="Controller" superclass="qpn::QHsm">
   <attribute name="obj" type="Controller" visibility="0x02" properties="0x01"/>
   <statechart properties="0x01">
    <initial target="../1">
     <initial_glyph conn="14,3,4,3,7,6">
      <action box="0,-2,10,2"/>
     </initial_glyph>
    </initial>
    <state name="IDLE">
     <tran trig="SETTING" target="../../2">
      <tran_glyph conn="52,8,1,3,10">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="START" target="../../3">
      <tran_glyph conn="32,22,2,0,6">
       <action box="0,-3,12,2"/>
      </tran_glyph>
     </tran>
     <tran trig="CAUTION_SIG" target="../../6">
      <tran_glyph conn="20,16,3,3,-12,46,12">
       <action box="-13,-3,13,3"/>
      </tran_glyph>
     </tran>
     <tran trig="TIME_TICK">
      <tran_glyph conn="20,14,3,-1,14">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="20,2,32,20"/>
    </state>
    <state name="SETTING">
     <tran trig="BACK" target="../../1">
      <tran_glyph conn="62,14,3,1,-10">
       <action box="-8,-3,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="CW">
      <tran_glyph conn="62,12,3,-1,14">
       <action box="1,-3,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="CCW">
      <tran_glyph conn="62,18,3,-1,14">
       <action box="1,-3,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="TEMP_SET" target="../../4">
      <tran_glyph conn="100,8,1,3,10">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="HUMI_SET" target="../../5">
      <tran_glyph conn="94,22,2,3,16,16">
       <action box="1,6,15,3"/>
      </tran_glyph>
     </tran>
     <tran trig="TIMER_BACK" target="../../1">
      <tran_glyph conn="62,20,3,1,-10">
       <action box="-9,1,14,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="62,2,38,20"/>
    </state>
    <state name="RUN">
     <tran trig="TIME_TICK">
      <tran_glyph conn="20,44,3,-1,14">
       <action box="2,-3,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="CAUTION_SIG" target="../../6">
      <tran_glyph conn="38,50,2,0,6">
       <action box="-3,-3,13,2"/>
      </tran_glyph>
     </tran>
     <tran trig="SETTING" target="../../2">
      <tran_glyph conn="52,38,1,2,18,-16">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="BACK" target="../../7">
      <tran_glyph conn="52,44,1,3,10,6,4">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="20,28,32,22"/>
    </state>
    <state name="TEMP">
     <tran trig="CW">
      <tran_glyph conn="110,14,3,-1,14">
       <action box="2,-4,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="CCW">
      <tran_glyph conn="110,20,3,-1,14">
       <action box="2,-4,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="BACK" target="../../2">
      <tran_glyph conn="110,16,3,1,-10">
       <action box="-7,1,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="SETTING">
      <tran_glyph conn="144,14,1,-1,-10">
       <action box="-9,-3,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="110,2,34,20"/>
    </state>
    <state name="HUMIDITY">
     <tran trig="CW">
      <tran_glyph conn="110,46,3,-1,14">
       <action box="2,-4,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="CCW">
      <tran_glyph conn="110,52,3,-1,14">
       <action box="2,-3,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="BACK" target="../../2">
      <tran_glyph conn="110,42,3,2,-22,-20">
       <action box="-11,1,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="SETTING">
      <tran_glyph conn="144,44,1,-1,-13">
       <action box="-12,-3,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="110,32,34,22"/>
    </state>
    <state name="CAUTION">
     <tran trig="BACK" target="../../1">
      <tran_glyph conn="20,60,3,3,-8,-42,8">
       <action box="-6,-37,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="20,56,32,14"/>
    </state>
    <state name="STOP">
     <tran trig="BACK" target="../../3">
      <tran_glyph conn="66,54,3,1,-8,-8,-6">
       <action box="-9,1,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="SETTING" target="../../2">
      <tran_glyph conn="76,42,0,2,-20">
       <action box="1,-8,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="66,42,20,18"/>
    </state>
    <state_diagram size="177,74"/>
   </statechart>
  </class>
  <attribute name="super_Controller" type="QHsm *const" visibility="0x00" properties="0x00">
   <code>= &amp;Controller_obj.super;</code>
  </attribute>
  <operation name="Controller_ctor" type="void" visibility="0x00" properties="0x00"/>
 </package>
 <directory name="..\src">
  <file name="Controller.cpp">
   <text>#include &lt;Arduino.h&gt;
#include &quot;Controller.h&quot;
#include &quot;lcd.h&quot;
#include &quot;rotary.h&quot;

$declare${Hsm::Controller}
$define${Hsm::Controller_ctor}
$define${Hsm::super_Controller}
$define${Hsm::Controller}
</text>
  </file>
  <file name="Controller.h">
   <text>#ifndef CONTROLLER_H
#define CONTROLLER_H
#include &quot;qpn.h&quot;

enum Controller_Signals
{
    SETTING_SIG = Q_USER_SIG,
    MAX_SIG,
    START_SIG,
    CAUTION_SIG_SIG,
    TIME_TICK_SIG,
    BACK_SIG,
    CW_SIG,
    CCW_SIG,
    TEMP_SET_SIG,
    HUMI_SET_SIG,
    TIMER_BACK_SIG,
    IGNORED_SIG,
    TICK_SIG,
    Max_SIG
};

$declare${Hsm::Controller_ctor}

#endif</text>
  </file>
 </directory>
</model>
